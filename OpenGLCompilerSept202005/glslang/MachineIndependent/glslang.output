State 294 contains 1 shift/reduce conflict.

Grammar
rule 1    variable_identifier -> IDENTIFIER
rule 2    primary_expression -> variable_identifier
rule 3    primary_expression -> INTCONSTANT
rule 4    primary_expression -> FLOATCONSTANT
rule 5    primary_expression -> BOOLCONSTANT
rule 6    primary_expression -> LEFT_PAREN expression RIGHT_PAREN
rule 7    postfix_expression -> primary_expression
rule 8    postfix_expression -> postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET
rule 9    postfix_expression -> function_call
rule 10   postfix_expression -> postfix_expression DOT FIELD_SELECTION
rule 11   postfix_expression -> postfix_expression INC_OP
rule 12   postfix_expression -> postfix_expression DEC_OP
rule 13   integer_expression -> expression
rule 14   function_call -> function_call_or_method
rule 15   function_call_or_method -> function_call_generic
rule 16   function_call_or_method -> postfix_expression DOT function_call_generic
rule 17   function_call_generic -> function_call_header_with_parameters RIGHT_PAREN
rule 18   function_call_generic -> function_call_header_no_parameters RIGHT_PAREN
rule 19   function_call_header_no_parameters -> function_call_header VOID_TYPE
rule 20   function_call_header_no_parameters -> function_call_header
rule 21   function_call_header_with_parameters -> function_call_header assignment_expression
rule 22   function_call_header_with_parameters -> function_call_header_with_parameters COMMA assignment_expression
rule 23   function_call_header -> function_identifier LEFT_PAREN
rule 24   function_identifier -> type_specifier
rule 25   function_identifier -> IDENTIFIER
rule 26   function_identifier -> FIELD_SELECTION
rule 27   unary_expression -> postfix_expression
rule 28   unary_expression -> INC_OP unary_expression
rule 29   unary_expression -> DEC_OP unary_expression
rule 30   unary_expression -> unary_operator unary_expression
rule 31   unary_operator -> PLUS
rule 32   unary_operator -> DASH
rule 33   unary_operator -> BANG
rule 34   unary_operator -> TILDE
rule 35   multiplicative_expression -> unary_expression
rule 36   multiplicative_expression -> multiplicative_expression STAR unary_expression
rule 37   multiplicative_expression -> multiplicative_expression SLASH unary_expression
rule 38   multiplicative_expression -> multiplicative_expression PERCENT unary_expression
rule 39   additive_expression -> multiplicative_expression
rule 40   additive_expression -> additive_expression PLUS multiplicative_expression
rule 41   additive_expression -> additive_expression DASH multiplicative_expression
rule 42   shift_expression -> additive_expression
rule 43   shift_expression -> shift_expression LEFT_OP additive_expression
rule 44   shift_expression -> shift_expression RIGHT_OP additive_expression
rule 45   relational_expression -> shift_expression
rule 46   relational_expression -> relational_expression LEFT_ANGLE shift_expression
rule 47   relational_expression -> relational_expression RIGHT_ANGLE shift_expression
rule 48   relational_expression -> relational_expression LE_OP shift_expression
rule 49   relational_expression -> relational_expression GE_OP shift_expression
rule 50   equality_expression -> relational_expression
rule 51   equality_expression -> equality_expression EQ_OP relational_expression
rule 52   equality_expression -> equality_expression NE_OP relational_expression
rule 53   and_expression -> equality_expression
rule 54   and_expression -> and_expression AMPERSAND equality_expression
rule 55   exclusive_or_expression -> and_expression
rule 56   exclusive_or_expression -> exclusive_or_expression CARET and_expression
rule 57   inclusive_or_expression -> exclusive_or_expression
rule 58   inclusive_or_expression -> inclusive_or_expression VERTICAL_BAR exclusive_or_expression
rule 59   logical_and_expression -> inclusive_or_expression
rule 60   logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression
rule 61   logical_xor_expression -> logical_and_expression
rule 62   logical_xor_expression -> logical_xor_expression XOR_OP logical_and_expression
rule 63   logical_or_expression -> logical_xor_expression
rule 64   logical_or_expression -> logical_or_expression OR_OP logical_xor_expression
rule 65   conditional_expression -> logical_or_expression
rule 66   conditional_expression -> logical_or_expression QUESTION expression COLON assignment_expression
rule 67   assignment_expression -> conditional_expression
rule 68   assignment_expression -> unary_expression assignment_operator assignment_expression
rule 69   assignment_operator -> EQUAL
rule 70   assignment_operator -> MUL_ASSIGN
rule 71   assignment_operator -> DIV_ASSIGN
rule 72   assignment_operator -> MOD_ASSIGN
rule 73   assignment_operator -> ADD_ASSIGN
rule 74   assignment_operator -> SUB_ASSIGN
rule 75   assignment_operator -> LEFT_ASSIGN
rule 76   assignment_operator -> RIGHT_ASSIGN
rule 77   assignment_operator -> AND_ASSIGN
rule 78   assignment_operator -> XOR_ASSIGN
rule 79   assignment_operator -> OR_ASSIGN
rule 80   expression -> assignment_expression
rule 81   expression -> expression COMMA assignment_expression
rule 82   constant_expression -> conditional_expression
rule 83   declaration -> function_prototype SEMICOLON
rule 84   declaration -> init_declarator_list SEMICOLON
rule 85   function_prototype -> function_declarator RIGHT_PAREN
rule 86   function_declarator -> function_header
rule 87   function_declarator -> function_header_with_parameters
rule 88   function_header_with_parameters -> function_header parameter_declaration
rule 89   function_header_with_parameters -> function_header_with_parameters COMMA parameter_declaration
rule 90   function_header -> fully_specified_type IDENTIFIER LEFT_PAREN
rule 91   parameter_declarator -> type_specifier IDENTIFIER
rule 92   parameter_declarator -> type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
rule 93   parameter_declaration -> type_qualifier parameter_qualifier parameter_declarator
rule 94   parameter_declaration -> parameter_qualifier parameter_declarator
rule 95   parameter_declaration -> type_qualifier parameter_qualifier parameter_type_specifier
rule 96   parameter_declaration -> parameter_qualifier parameter_type_specifier
rule 97   parameter_qualifier ->		/* empty */
rule 98   parameter_qualifier -> IN_QUAL
rule 99   parameter_qualifier -> OUT_QUAL
rule 100  parameter_qualifier -> INOUT_QUAL
rule 101  parameter_type_specifier -> type_specifier
rule 102  init_declarator_list -> single_declaration
rule 103  init_declarator_list -> init_declarator_list COMMA IDENTIFIER
rule 104  init_declarator_list -> init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET
rule 105  init_declarator_list -> init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
rule 106  init_declarator_list -> init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET EQUAL initializer
rule 107  init_declarator_list -> init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET EQUAL initializer
rule 108  init_declarator_list -> init_declarator_list COMMA IDENTIFIER EQUAL initializer
rule 109  single_declaration -> fully_specified_type
rule 110  single_declaration -> fully_specified_type IDENTIFIER
rule 111  single_declaration -> fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET
rule 112  single_declaration -> fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
rule 113  single_declaration -> fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET EQUAL initializer
rule 114  single_declaration -> fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET EQUAL initializer
rule 115  single_declaration -> fully_specified_type IDENTIFIER EQUAL initializer
rule 116  fully_specified_type -> type_specifier
rule 117  fully_specified_type -> type_qualifier type_specifier
rule 118  type_qualifier -> CONST_QUAL
rule 119  type_qualifier -> ATTRIBUTE
rule 120  type_qualifier -> VARYING
rule 121  type_qualifier -> UNIFORM
rule 122  type_specifier -> type_specifier_nonarray
rule 123  type_specifier -> type_specifier_nonarray LEFT_BRACKET constant_expression RIGHT_BRACKET
rule 124  type_specifier_nonarray -> VOID_TYPE
rule 125  type_specifier_nonarray -> FLOAT_TYPE
rule 126  type_specifier_nonarray -> INT_TYPE
rule 127  type_specifier_nonarray -> BOOL_TYPE
rule 128  type_specifier_nonarray -> VEC2
rule 129  type_specifier_nonarray -> VEC3
rule 130  type_specifier_nonarray -> VEC4
rule 131  type_specifier_nonarray -> BVEC2
rule 132  type_specifier_nonarray -> BVEC3
rule 133  type_specifier_nonarray -> BVEC4
rule 134  type_specifier_nonarray -> IVEC2
rule 135  type_specifier_nonarray -> IVEC3
rule 136  type_specifier_nonarray -> IVEC4
rule 137  type_specifier_nonarray -> MATRIX2
rule 138  type_specifier_nonarray -> MATRIX3
rule 139  type_specifier_nonarray -> MATRIX4
rule 140  type_specifier_nonarray -> SAMPLER1D
rule 141  type_specifier_nonarray -> SAMPLER2D
rule 142  type_specifier_nonarray -> SAMPLER3D
rule 143  type_specifier_nonarray -> SAMPLERCUBE
rule 144  type_specifier_nonarray -> SAMPLER1DSHADOW
rule 145  type_specifier_nonarray -> SAMPLER2DSHADOW
rule 146  type_specifier_nonarray -> SAMPLERRECTARB
rule 147  type_specifier_nonarray -> SAMPLERRECTSHADOWARB
rule 148  type_specifier_nonarray -> struct_specifier
rule 149  type_specifier_nonarray -> TYPE_NAME
rule 150  struct_specifier -> STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE
rule 151  struct_specifier -> STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE
rule 152  struct_declaration_list -> struct_declaration
rule 153  struct_declaration_list -> struct_declaration_list struct_declaration
rule 154  struct_declaration -> type_specifier struct_declarator_list SEMICOLON
rule 155  struct_declarator_list -> struct_declarator
rule 156  struct_declarator_list -> struct_declarator_list COMMA struct_declarator
rule 157  struct_declarator -> IDENTIFIER
rule 158  struct_declarator -> IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET
rule 159  initializer -> assignment_expression
rule 160  declaration_statement -> declaration
rule 161  statement -> compound_statement
rule 162  statement -> simple_statement
rule 163  simple_statement -> declaration_statement
rule 164  simple_statement -> expression_statement
rule 165  simple_statement -> selection_statement
rule 166  simple_statement -> iteration_statement
rule 167  simple_statement -> jump_statement
rule 168  compound_statement -> LEFT_BRACE RIGHT_BRACE
rule 169  @1 ->		/* empty */
rule 170  @2 ->		/* empty */
rule 171  compound_statement -> LEFT_BRACE @1 statement_list @2 RIGHT_BRACE
rule 172  statement_no_new_scope -> compound_statement_no_new_scope
rule 173  statement_no_new_scope -> simple_statement
rule 174  compound_statement_no_new_scope -> LEFT_BRACE RIGHT_BRACE
rule 175  compound_statement_no_new_scope -> LEFT_BRACE statement_list RIGHT_BRACE
rule 176  statement_list -> statement
rule 177  statement_list -> statement_list statement
rule 178  expression_statement -> SEMICOLON
rule 179  expression_statement -> expression SEMICOLON
rule 180  selection_statement -> IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement
rule 181  selection_rest_statement -> statement ELSE statement
rule 182  selection_rest_statement -> statement
rule 183  condition -> expression
rule 184  condition -> fully_specified_type IDENTIFIER EQUAL initializer
rule 185  @3 ->		/* empty */
rule 186  iteration_statement -> WHILE LEFT_PAREN @3 condition RIGHT_PAREN statement_no_new_scope
rule 187  @4 ->		/* empty */
rule 188  iteration_statement -> DO @4 statement WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON
rule 189  @5 ->		/* empty */
rule 190  iteration_statement -> FOR LEFT_PAREN @5 for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope
rule 191  for_init_statement -> expression_statement
rule 192  for_init_statement -> declaration_statement
rule 193  conditionopt -> condition
rule 194  conditionopt ->		/* empty */
rule 195  for_rest_statement -> conditionopt SEMICOLON
rule 196  for_rest_statement -> conditionopt SEMICOLON expression
rule 197  jump_statement -> CONTINUE SEMICOLON
rule 198  jump_statement -> BREAK SEMICOLON
rule 199  jump_statement -> RETURN SEMICOLON
rule 200  jump_statement -> RETURN expression SEMICOLON
rule 201  jump_statement -> DISCARD SEMICOLON
rule 202  translation_unit -> external_declaration
rule 203  translation_unit -> translation_unit external_declaration
rule 204  external_declaration -> function_definition
rule 205  external_declaration -> declaration
rule 206  @6 ->		/* empty */
rule 207  function_definition -> function_prototype @6 compound_statement_no_new_scope

Terminals, with rules where they appear

$ (-1)
error (256)
ATTRIBUTE (258) 119
CONST_QUAL (259) 118
BOOL_TYPE (260) 127
FLOAT_TYPE (261) 125
INT_TYPE (262) 126
BREAK (263) 198
CONTINUE (264) 197
DO (265) 188
ELSE (266) 181
FOR (267) 190
IF (268) 180
DISCARD (269) 201
RETURN (270) 199 200
BVEC2 (271) 131
BVEC3 (272) 132
BVEC4 (273) 133
IVEC2 (274) 134
IVEC3 (275) 135
IVEC4 (276) 136
VEC2 (277) 128
VEC3 (278) 129
VEC4 (279) 130
MATRIX2 (280) 137
MATRIX3 (281) 138
MATRIX4 (282) 139
IN_QUAL (283) 98
OUT_QUAL (284) 99
INOUT_QUAL (285) 100
UNIFORM (286) 121
VARYING (287) 120
STRUCT (288) 150 151
VOID_TYPE (289) 19 124
WHILE (290) 186 188
SAMPLER1D (291) 140
SAMPLER2D (292) 141
SAMPLER3D (293) 142
SAMPLERCUBE (294) 143
SAMPLER1DSHADOW (295) 144
SAMPLER2DSHADOW (296) 145
SAMPLERRECTARB (297) 146
SAMPLERRECTSHADOWARB (298) 147
IDENTIFIER (299) 1 25 90 91 92 103 104 105 106 107 108 110 111 112
    113 114 115 150 157 158 184
TYPE_NAME (300) 149
FLOATCONSTANT (301) 4
INTCONSTANT (302) 3
BOOLCONSTANT (303) 5
FIELD_SELECTION (304) 10 26
LEFT_OP (305) 43
RIGHT_OP (306) 44
INC_OP (307) 11 28
DEC_OP (308) 12 29
LE_OP (309) 48
GE_OP (310) 49
EQ_OP (311) 51
NE_OP (312) 52
AND_OP (313) 60
OR_OP (314) 64
XOR_OP (315) 62
MUL_ASSIGN (316) 70
DIV_ASSIGN (317) 71
ADD_ASSIGN (318) 73
MOD_ASSIGN (319) 72
LEFT_ASSIGN (320) 75
RIGHT_ASSIGN (321) 76
AND_ASSIGN (322) 77
XOR_ASSIGN (323) 78
OR_ASSIGN (324) 79
SUB_ASSIGN (325) 74
LEFT_PAREN (326) 6 23 90 180 186 188 190
RIGHT_PAREN (327) 6 17 18 85 180 186 188 190
LEFT_BRACKET (328) 8 92 104 105 106 107 111 112 113 114 123 158
RIGHT_BRACKET (329) 8 92 104 105 106 107 111 112 113 114 123 158
LEFT_BRACE (330) 150 151 168 171 174 175
RIGHT_BRACE (331) 150 151 168 171 174 175
DOT (332) 10 16
COMMA (333) 22 81 89 103 104 105 106 107 108 156
COLON (334) 66
EQUAL (335) 69 106 107 108 113 114 115 184
SEMICOLON (336) 83 84 154 178 179 188 195 196 197 198 199 200 201
BANG (337) 33
DASH (338) 32 41
TILDE (339) 34
PLUS (340) 31 40
STAR (341) 36
SLASH (342) 37
PERCENT (343) 38
LEFT_ANGLE (344) 46
RIGHT_ANGLE (345) 47
VERTICAL_BAR (346) 58
CARET (347) 56
AMPERSAND (348) 54
QUESTION (349) 66

Nonterminals, with rules where they appear

variable_identifier (95)
    on left: 1, on right: 2
primary_expression (96)
    on left: 2 3 4 5 6, on right: 7
postfix_expression (97)
    on left: 7 8 9 10 11 12, on right: 8 10 11 12 16 27
integer_expression (98)
    on left: 13, on right: 8
function_call (99)
    on left: 14, on right: 9
function_call_or_method (100)
    on left: 15 16, on right: 14
function_call_generic (101)
    on left: 17 18, on right: 15 16
function_call_header_no_parameters (102)
    on left: 19 20, on right: 18
function_call_header_with_parameters (103)
    on left: 21 22, on right: 17 22
function_call_header (104)
    on left: 23, on right: 19 20 21
function_identifier (105)
    on left: 24 25 26, on right: 23
unary_expression (106)
    on left: 27 28 29 30, on right: 28 29 30 35 36 37 38 68
unary_operator (107)
    on left: 31 32 33 34, on right: 30
multiplicative_expression (108)
    on left: 35 36 37 38, on right: 36 37 38 39 40 41
additive_expression (109)
    on left: 39 40 41, on right: 40 41 42 43 44
shift_expression (110)
    on left: 42 43 44, on right: 43 44 45 46 47 48 49
relational_expression (111)
    on left: 45 46 47 48 49, on right: 46 47 48 49 50 51 52
equality_expression (112)
    on left: 50 51 52, on right: 51 52 53 54
and_expression (113)
    on left: 53 54, on right: 54 55 56
exclusive_or_expression (114)
    on left: 55 56, on right: 56 57 58
inclusive_or_expression (115)
    on left: 57 58, on right: 58 59 60
logical_and_expression (116)
    on left: 59 60, on right: 60 61 62
logical_xor_expression (117)
    on left: 61 62, on right: 62 63 64
logical_or_expression (118)
    on left: 63 64, on right: 64 65 66
conditional_expression (119)
    on left: 65 66, on right: 67 82
assignment_expression (120)
    on left: 67 68, on right: 21 22 66 68 80 81 159
assignment_operator (121)
    on left: 69 70 71 72 73 74 75 76 77 78 79, on right: 68
expression (122)
    on left: 80 81, on right: 6 13 66 81 179 180 183 188 196 200
constant_expression (123)
    on left: 82, on right: 92 105 107 112 114 123 158
declaration (124)
    on left: 83 84, on right: 160 205
function_prototype (125)
    on left: 85, on right: 83 207
function_declarator (126)
    on left: 86 87, on right: 85
function_header_with_parameters (127)
    on left: 88 89, on right: 87 89
function_header (128)
    on left: 90, on right: 86 88
parameter_declarator (129)
    on left: 91 92, on right: 93 94
parameter_declaration (130)
    on left: 93 94 95 96, on right: 88 89
parameter_qualifier (131)
    on left: 97 98 99 100, on right: 93 94 95 96
parameter_type_specifier (132)
    on left: 101, on right: 95 96
init_declarator_list (133)
    on left: 102 103 104 105 106 107 108, on right: 84 103 104 105
    106 107 108
single_declaration (134)
    on left: 109 110 111 112 113 114 115, on right: 102
fully_specified_type (135)
    on left: 116 117, on right: 90 109 110 111 112 113 114 115 184
type_qualifier (136)
    on left: 118 119 120 121, on right: 93 95 117
type_specifier (137)
    on left: 122 123, on right: 24 91 92 101 116 117 154
type_specifier_nonarray (138)
    on left: 124 125 126 127 128 129 130 131 132 133 134 135 136 137
    138 139 140 141 142 143 144 145 146 147 148 149,
    on right: 122 123
struct_specifier (139)
    on left: 150 151, on right: 148
struct_declaration_list (140)
    on left: 152 153, on right: 150 151 153
struct_declaration (141)
    on left: 154, on right: 152 153
struct_declarator_list (142)
    on left: 155 156, on right: 154 156
struct_declarator (143)
    on left: 157 158, on right: 155 156
initializer (144)
    on left: 159, on right: 106 107 108 113 114 115 184
declaration_statement (145)
    on left: 160, on right: 163 192
statement (146)
    on left: 161 162, on right: 176 177 181 182 188
simple_statement (147)
    on left: 163 164 165 166 167, on right: 162 173
compound_statement (148)
    on left: 168 171, on right: 161
@1 (149)
    on left: 169, on right: 171
@2 (150)
    on left: 170, on right: 171
statement_no_new_scope (151)
    on left: 172 173, on right: 186 190
compound_statement_no_new_scope (152)
    on left: 174 175, on right: 172 207
statement_list (153)
    on left: 176 177, on right: 171 175 177
expression_statement (154)
    on left: 178 179, on right: 164 191
selection_statement (155)
    on left: 180, on right: 165
selection_rest_statement (156)
    on left: 181 182, on right: 180
condition (157)
    on left: 183 184, on right: 186 193
iteration_statement (158)
    on left: 186 188 190, on right: 166
@3 (159)
    on left: 185, on right: 186
@4 (160)
    on left: 187, on right: 188
@5 (161)
    on left: 189, on right: 190
for_init_statement (162)
    on left: 191 192, on right: 190
conditionopt (163)
    on left: 193 194, on right: 195 196
for_rest_statement (164)
    on left: 195 196, on right: 190
jump_statement (165)
    on left: 197 198 199 200 201, on right: 167
translation_unit (166)
    on left: 202 203, on right: 203
external_declaration (167)
    on left: 204 205, on right: 202 203
function_definition (168)
    on left: 207, on right: 204
@6 (169)
    on left: 206, on right: 207


state 0

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    TYPE_NAME	shift, and go to state 30

    declaration	go to state 31
    function_prototype	go to state 32
    function_declarator	go to state 33
    function_header_with_parameters	go to state 34
    function_header	go to state 35
    init_declarator_list	go to state 36
    single_declaration	go to state 37
    fully_specified_type	go to state 38
    type_qualifier	go to state 39
    type_specifier	go to state 40
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    translation_unit	go to state 43
    external_declaration	go to state 44
    function_definition	go to state 45



state 1

    type_qualifier  ->  ATTRIBUTE .   (rule 119)

    $default	reduce using rule 119 (type_qualifier)



state 2

    type_qualifier  ->  CONST_QUAL .   (rule 118)

    $default	reduce using rule 118 (type_qualifier)



state 3

    type_specifier_nonarray  ->  BOOL_TYPE .   (rule 127)

    $default	reduce using rule 127 (type_specifier_nonarray)



state 4

    type_specifier_nonarray  ->  FLOAT_TYPE .   (rule 125)

    $default	reduce using rule 125 (type_specifier_nonarray)



state 5

    type_specifier_nonarray  ->  INT_TYPE .   (rule 126)

    $default	reduce using rule 126 (type_specifier_nonarray)



state 6

    type_specifier_nonarray  ->  BVEC2 .   (rule 131)

    $default	reduce using rule 131 (type_specifier_nonarray)



state 7

    type_specifier_nonarray  ->  BVEC3 .   (rule 132)

    $default	reduce using rule 132 (type_specifier_nonarray)



state 8

    type_specifier_nonarray  ->  BVEC4 .   (rule 133)

    $default	reduce using rule 133 (type_specifier_nonarray)



state 9

    type_specifier_nonarray  ->  IVEC2 .   (rule 134)

    $default	reduce using rule 134 (type_specifier_nonarray)



state 10

    type_specifier_nonarray  ->  IVEC3 .   (rule 135)

    $default	reduce using rule 135 (type_specifier_nonarray)



state 11

    type_specifier_nonarray  ->  IVEC4 .   (rule 136)

    $default	reduce using rule 136 (type_specifier_nonarray)



state 12

    type_specifier_nonarray  ->  VEC2 .   (rule 128)

    $default	reduce using rule 128 (type_specifier_nonarray)



state 13

    type_specifier_nonarray  ->  VEC3 .   (rule 129)

    $default	reduce using rule 129 (type_specifier_nonarray)



state 14

    type_specifier_nonarray  ->  VEC4 .   (rule 130)

    $default	reduce using rule 130 (type_specifier_nonarray)



state 15

    type_specifier_nonarray  ->  MATRIX2 .   (rule 137)

    $default	reduce using rule 137 (type_specifier_nonarray)



state 16

    type_specifier_nonarray  ->  MATRIX3 .   (rule 138)

    $default	reduce using rule 138 (type_specifier_nonarray)



state 17

    type_specifier_nonarray  ->  MATRIX4 .   (rule 139)

    $default	reduce using rule 139 (type_specifier_nonarray)



state 18

    type_qualifier  ->  UNIFORM .   (rule 121)

    $default	reduce using rule 121 (type_qualifier)



state 19

    type_qualifier  ->  VARYING .   (rule 120)

    $default	reduce using rule 120 (type_qualifier)



state 20

    struct_specifier  ->  STRUCT . IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE   (rule 150)
    struct_specifier  ->  STRUCT . LEFT_BRACE struct_declaration_list RIGHT_BRACE   (rule 151)

    IDENTIFIER	shift, and go to state 46
    LEFT_BRACE	shift, and go to state 47



state 21

    type_specifier_nonarray  ->  VOID_TYPE .   (rule 124)

    $default	reduce using rule 124 (type_specifier_nonarray)



state 22

    type_specifier_nonarray  ->  SAMPLER1D .   (rule 140)

    $default	reduce using rule 140 (type_specifier_nonarray)



state 23

    type_specifier_nonarray  ->  SAMPLER2D .   (rule 141)

    $default	reduce using rule 141 (type_specifier_nonarray)



state 24

    type_specifier_nonarray  ->  SAMPLER3D .   (rule 142)

    $default	reduce using rule 142 (type_specifier_nonarray)



state 25

    type_specifier_nonarray  ->  SAMPLERCUBE .   (rule 143)

    $default	reduce using rule 143 (type_specifier_nonarray)



state 26

    type_specifier_nonarray  ->  SAMPLER1DSHADOW .   (rule 144)

    $default	reduce using rule 144 (type_specifier_nonarray)



state 27

    type_specifier_nonarray  ->  SAMPLER2DSHADOW .   (rule 145)

    $default	reduce using rule 145 (type_specifier_nonarray)



state 28

    type_specifier_nonarray  ->  SAMPLERRECTARB .   (rule 146)

    $default	reduce using rule 146 (type_specifier_nonarray)



state 29

    type_specifier_nonarray  ->  SAMPLERRECTSHADOWARB .   (rule 147)

    $default	reduce using rule 147 (type_specifier_nonarray)



state 30

    type_specifier_nonarray  ->  TYPE_NAME .   (rule 149)

    $default	reduce using rule 149 (type_specifier_nonarray)



state 31

    external_declaration  ->  declaration .   (rule 205)

    $default	reduce using rule 205 (external_declaration)



state 32

    declaration  ->  function_prototype . SEMICOLON   (rule 83)
    function_definition  ->  function_prototype . @6 compound_statement_no_new_scope   (rule 207)

    SEMICOLON	shift, and go to state 48

    $default	reduce using rule 206 (@6)

    @6  	go to state 49



state 33

    function_prototype  ->  function_declarator . RIGHT_PAREN   (rule 85)

    RIGHT_PAREN	shift, and go to state 50



state 34

    function_declarator  ->  function_header_with_parameters .   (rule 87)
    function_header_with_parameters  ->  function_header_with_parameters . COMMA parameter_declaration   (rule 89)

    COMMA	shift, and go to state 51

    $default	reduce using rule 87 (function_declarator)



state 35

    function_declarator  ->  function_header .   (rule 86)
    function_header_with_parameters  ->  function_header . parameter_declaration   (rule 88)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    IN_QUAL	shift, and go to state 52
    OUT_QUAL	shift, and go to state 53
    INOUT_QUAL	shift, and go to state 54
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19

    RIGHT_PAREN	reduce using rule 86 (function_declarator)
    $default	reduce using rule 97 (parameter_qualifier)

    parameter_declaration	go to state 55
    parameter_qualifier	go to state 56
    type_qualifier	go to state 57



state 36

    declaration  ->  init_declarator_list . SEMICOLON   (rule 84)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER   (rule 103)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET   (rule 104)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 105)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET EQUAL initializer   (rule 106)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET EQUAL initializer   (rule 107)
    init_declarator_list  ->  init_declarator_list . COMMA IDENTIFIER EQUAL initializer   (rule 108)

    COMMA	shift, and go to state 58
    SEMICOLON	shift, and go to state 59



state 37

    init_declarator_list  ->  single_declaration .   (rule 102)

    $default	reduce using rule 102 (init_declarator_list)



state 38

    function_header  ->  fully_specified_type . IDENTIFIER LEFT_PAREN   (rule 90)
    single_declaration  ->  fully_specified_type .   (rule 109)
    single_declaration  ->  fully_specified_type . IDENTIFIER   (rule 110)
    single_declaration  ->  fully_specified_type . IDENTIFIER LEFT_BRACKET RIGHT_BRACKET   (rule 111)
    single_declaration  ->  fully_specified_type . IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 112)
    single_declaration  ->  fully_specified_type . IDENTIFIER LEFT_BRACKET RIGHT_BRACKET EQUAL initializer   (rule 113)
    single_declaration  ->  fully_specified_type . IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET EQUAL initializer   (rule 114)
    single_declaration  ->  fully_specified_type . IDENTIFIER EQUAL initializer   (rule 115)

    IDENTIFIER	shift, and go to state 60

    $default	reduce using rule 109 (single_declaration)



state 39

    fully_specified_type  ->  type_qualifier . type_specifier   (rule 117)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    TYPE_NAME	shift, and go to state 30

    type_specifier	go to state 61
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 40

    fully_specified_type  ->  type_specifier .   (rule 116)

    $default	reduce using rule 116 (fully_specified_type)



state 41

    type_specifier  ->  type_specifier_nonarray .   (rule 122)
    type_specifier  ->  type_specifier_nonarray . LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 123)

    LEFT_BRACKET	shift, and go to state 62

    $default	reduce using rule 122 (type_specifier)



state 42

    type_specifier_nonarray  ->  struct_specifier .   (rule 148)

    $default	reduce using rule 148 (type_specifier_nonarray)



state 43

    translation_unit  ->  translation_unit . external_declaration   (rule 203)

    $   	go to state 314
    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    TYPE_NAME	shift, and go to state 30

    declaration	go to state 31
    function_prototype	go to state 32
    function_declarator	go to state 33
    function_header_with_parameters	go to state 34
    function_header	go to state 35
    init_declarator_list	go to state 36
    single_declaration	go to state 37
    fully_specified_type	go to state 38
    type_qualifier	go to state 39
    type_specifier	go to state 40
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    external_declaration	go to state 63
    function_definition	go to state 45



state 44

    translation_unit  ->  external_declaration .   (rule 202)

    $default	reduce using rule 202 (translation_unit)



state 45

    external_declaration  ->  function_definition .   (rule 204)

    $default	reduce using rule 204 (external_declaration)



state 46

    struct_specifier  ->  STRUCT IDENTIFIER . LEFT_BRACE struct_declaration_list RIGHT_BRACE   (rule 150)

    LEFT_BRACE	shift, and go to state 64



state 47

    struct_specifier  ->  STRUCT LEFT_BRACE . struct_declaration_list RIGHT_BRACE   (rule 151)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    TYPE_NAME	shift, and go to state 30

    type_specifier	go to state 65
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    struct_declaration_list	go to state 66
    struct_declaration	go to state 67



state 48

    declaration  ->  function_prototype SEMICOLON .   (rule 83)

    $default	reduce using rule 83 (declaration)



state 49

    function_definition  ->  function_prototype @6 . compound_statement_no_new_scope   (rule 207)

    LEFT_BRACE	shift, and go to state 68

    compound_statement_no_new_scope	go to state 69



state 50

    function_prototype  ->  function_declarator RIGHT_PAREN .   (rule 85)

    $default	reduce using rule 85 (function_prototype)



state 51

    function_header_with_parameters  ->  function_header_with_parameters COMMA . parameter_declaration   (rule 89)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    IN_QUAL	shift, and go to state 52
    OUT_QUAL	shift, and go to state 53
    INOUT_QUAL	shift, and go to state 54
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19

    $default	reduce using rule 97 (parameter_qualifier)

    parameter_declaration	go to state 70
    parameter_qualifier	go to state 56
    type_qualifier	go to state 57



state 52

    parameter_qualifier  ->  IN_QUAL .   (rule 98)

    $default	reduce using rule 98 (parameter_qualifier)



state 53

    parameter_qualifier  ->  OUT_QUAL .   (rule 99)

    $default	reduce using rule 99 (parameter_qualifier)



state 54

    parameter_qualifier  ->  INOUT_QUAL .   (rule 100)

    $default	reduce using rule 100 (parameter_qualifier)



state 55

    function_header_with_parameters  ->  function_header parameter_declaration .   (rule 88)

    $default	reduce using rule 88 (function_header_with_parameters)



state 56

    parameter_declaration  ->  parameter_qualifier . parameter_declarator   (rule 94)
    parameter_declaration  ->  parameter_qualifier . parameter_type_specifier   (rule 96)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    TYPE_NAME	shift, and go to state 30

    parameter_declarator	go to state 71
    parameter_type_specifier	go to state 72
    type_specifier	go to state 73
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 57

    parameter_declaration  ->  type_qualifier . parameter_qualifier parameter_declarator   (rule 93)
    parameter_declaration  ->  type_qualifier . parameter_qualifier parameter_type_specifier   (rule 95)

    IN_QUAL	shift, and go to state 52
    OUT_QUAL	shift, and go to state 53
    INOUT_QUAL	shift, and go to state 54

    $default	reduce using rule 97 (parameter_qualifier)

    parameter_qualifier	go to state 74



state 58

    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER   (rule 103)
    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER LEFT_BRACKET RIGHT_BRACKET   (rule 104)
    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 105)
    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER LEFT_BRACKET RIGHT_BRACKET EQUAL initializer   (rule 106)
    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET EQUAL initializer   (rule 107)
    init_declarator_list  ->  init_declarator_list COMMA . IDENTIFIER EQUAL initializer   (rule 108)

    IDENTIFIER	shift, and go to state 75



state 59

    declaration  ->  init_declarator_list SEMICOLON .   (rule 84)

    $default	reduce using rule 84 (declaration)



state 60

    function_header  ->  fully_specified_type IDENTIFIER . LEFT_PAREN   (rule 90)
    single_declaration  ->  fully_specified_type IDENTIFIER .   (rule 110)
    single_declaration  ->  fully_specified_type IDENTIFIER . LEFT_BRACKET RIGHT_BRACKET   (rule 111)
    single_declaration  ->  fully_specified_type IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 112)
    single_declaration  ->  fully_specified_type IDENTIFIER . LEFT_BRACKET RIGHT_BRACKET EQUAL initializer   (rule 113)
    single_declaration  ->  fully_specified_type IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET EQUAL initializer   (rule 114)
    single_declaration  ->  fully_specified_type IDENTIFIER . EQUAL initializer   (rule 115)

    LEFT_PAREN	shift, and go to state 76
    LEFT_BRACKET	shift, and go to state 77
    EQUAL	shift, and go to state 78

    $default	reduce using rule 110 (single_declaration)



state 61

    fully_specified_type  ->  type_qualifier type_specifier .   (rule 117)

    $default	reduce using rule 117 (fully_specified_type)



state 62

    type_specifier  ->  type_specifier_nonarray LEFT_BRACKET . constant_expression RIGHT_BRACKET   (rule 123)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 101
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 114
    constant_expression	go to state 115
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 63

    translation_unit  ->  translation_unit external_declaration .   (rule 203)

    $default	reduce using rule 203 (translation_unit)



state 64

    struct_specifier  ->  STRUCT IDENTIFIER LEFT_BRACE . struct_declaration_list RIGHT_BRACE   (rule 150)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    TYPE_NAME	shift, and go to state 30

    type_specifier	go to state 65
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    struct_declaration_list	go to state 117
    struct_declaration	go to state 67



state 65

    struct_declaration  ->  type_specifier . struct_declarator_list SEMICOLON   (rule 154)

    IDENTIFIER	shift, and go to state 118

    struct_declarator_list	go to state 119
    struct_declarator	go to state 120



state 66

    struct_specifier  ->  STRUCT LEFT_BRACE struct_declaration_list . RIGHT_BRACE   (rule 151)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 153)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    TYPE_NAME	shift, and go to state 30
    RIGHT_BRACE	shift, and go to state 121

    type_specifier	go to state 65
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    struct_declaration	go to state 122



state 67

    struct_declaration_list  ->  struct_declaration .   (rule 152)

    $default	reduce using rule 152 (struct_declaration_list)



state 68

    compound_statement_no_new_scope  ->  LEFT_BRACE . RIGHT_BRACE   (rule 174)
    compound_statement_no_new_scope  ->  LEFT_BRACE . statement_list RIGHT_BRACE   (rule 175)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 123
    CONTINUE	shift, and go to state 124
    DO  	shift, and go to state 125
    FOR 	shift, and go to state 126
    IF  	shift, and go to state 127
    DISCARD	shift, and go to state 128
    RETURN	shift, and go to state 129
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 130
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    LEFT_BRACE	shift, and go to state 131
    RIGHT_BRACE	shift, and go to state 132
    SEMICOLON	shift, and go to state 133
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 136
    expression	go to state 137
    declaration	go to state 138
    function_prototype	go to state 139
    function_declarator	go to state 33
    function_header_with_parameters	go to state 34
    function_header	go to state 35
    init_declarator_list	go to state 36
    single_declaration	go to state 37
    fully_specified_type	go to state 38
    type_qualifier	go to state 39
    type_specifier	go to state 140
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    declaration_statement	go to state 141
    statement	go to state 142
    simple_statement	go to state 143
    compound_statement	go to state 144
    statement_list	go to state 145
    expression_statement	go to state 146
    selection_statement	go to state 147
    iteration_statement	go to state 148
    jump_statement	go to state 149



state 69

    function_definition  ->  function_prototype @6 compound_statement_no_new_scope .   (rule 207)

    $default	reduce using rule 207 (function_definition)



state 70

    function_header_with_parameters  ->  function_header_with_parameters COMMA parameter_declaration .   (rule 89)

    $default	reduce using rule 89 (function_header_with_parameters)



state 71

    parameter_declaration  ->  parameter_qualifier parameter_declarator .   (rule 94)

    $default	reduce using rule 94 (parameter_declaration)



state 72

    parameter_declaration  ->  parameter_qualifier parameter_type_specifier .   (rule 96)

    $default	reduce using rule 96 (parameter_declaration)



state 73

    parameter_declarator  ->  type_specifier . IDENTIFIER   (rule 91)
    parameter_declarator  ->  type_specifier . IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 92)
    parameter_type_specifier  ->  type_specifier .   (rule 101)

    IDENTIFIER	shift, and go to state 150

    $default	reduce using rule 101 (parameter_type_specifier)



state 74

    parameter_declaration  ->  type_qualifier parameter_qualifier . parameter_declarator   (rule 93)
    parameter_declaration  ->  type_qualifier parameter_qualifier . parameter_type_specifier   (rule 95)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    TYPE_NAME	shift, and go to state 30

    parameter_declarator	go to state 151
    parameter_type_specifier	go to state 152
    type_specifier	go to state 73
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 75

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER .   (rule 103)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER . LEFT_BRACKET RIGHT_BRACKET   (rule 104)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 105)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER . LEFT_BRACKET RIGHT_BRACKET EQUAL initializer   (rule 106)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET EQUAL initializer   (rule 107)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER . EQUAL initializer   (rule 108)

    LEFT_BRACKET	shift, and go to state 153
    EQUAL	shift, and go to state 154

    $default	reduce using rule 103 (init_declarator_list)



state 76

    function_header  ->  fully_specified_type IDENTIFIER LEFT_PAREN .   (rule 90)

    $default	reduce using rule 90 (function_header)



state 77

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET . RIGHT_BRACKET   (rule 111)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET   (rule 112)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET . RIGHT_BRACKET EQUAL initializer   (rule 113)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET EQUAL initializer   (rule 114)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    RIGHT_BRACKET	shift, and go to state 155
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 101
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 114
    constant_expression	go to state 156
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 78

    single_declaration  ->  fully_specified_type IDENTIFIER EQUAL . initializer   (rule 115)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 157
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    initializer	go to state 158



state 79

    variable_identifier  ->  IDENTIFIER .   (rule 1)
    function_identifier  ->  IDENTIFIER .   (rule 25)

    LEFT_PAREN	reduce using rule 25 (function_identifier)
    $default	reduce using rule 1 (variable_identifier)



state 80

    primary_expression  ->  FLOATCONSTANT .   (rule 4)

    $default	reduce using rule 4 (primary_expression)



state 81

    primary_expression  ->  INTCONSTANT .   (rule 3)

    $default	reduce using rule 3 (primary_expression)



state 82

    primary_expression  ->  BOOLCONSTANT .   (rule 5)

    $default	reduce using rule 5 (primary_expression)



state 83

    function_identifier  ->  FIELD_SELECTION .   (rule 26)

    $default	reduce using rule 26 (function_identifier)



state 84

    unary_expression  ->  INC_OP . unary_expression   (rule 28)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 159
    unary_operator	go to state 102
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 85

    unary_expression  ->  DEC_OP . unary_expression   (rule 29)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 160
    unary_operator	go to state 102
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 86

    primary_expression  ->  LEFT_PAREN . expression RIGHT_PAREN   (rule 6)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 136
    expression	go to state 161
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 87

    unary_operator  ->  BANG .   (rule 33)

    $default	reduce using rule 33 (unary_operator)



state 88

    unary_operator  ->  DASH .   (rule 32)

    $default	reduce using rule 32 (unary_operator)



state 89

    unary_operator  ->  TILDE .   (rule 34)

    $default	reduce using rule 34 (unary_operator)



state 90

    unary_operator  ->  PLUS .   (rule 31)

    $default	reduce using rule 31 (unary_operator)



state 91

    primary_expression  ->  variable_identifier .   (rule 2)

    $default	reduce using rule 2 (primary_expression)



state 92

    postfix_expression  ->  primary_expression .   (rule 7)

    $default	reduce using rule 7 (postfix_expression)



state 93

    postfix_expression  ->  postfix_expression . LEFT_BRACKET integer_expression RIGHT_BRACKET   (rule 8)
    postfix_expression  ->  postfix_expression . DOT FIELD_SELECTION   (rule 10)
    postfix_expression  ->  postfix_expression . INC_OP   (rule 11)
    postfix_expression  ->  postfix_expression . DEC_OP   (rule 12)
    function_call_or_method  ->  postfix_expression . DOT function_call_generic   (rule 16)
    unary_expression  ->  postfix_expression .   (rule 27)

    INC_OP	shift, and go to state 162
    DEC_OP	shift, and go to state 163
    LEFT_BRACKET	shift, and go to state 164
    DOT 	shift, and go to state 165

    $default	reduce using rule 27 (unary_expression)



state 94

    postfix_expression  ->  function_call .   (rule 9)

    $default	reduce using rule 9 (postfix_expression)



state 95

    function_call  ->  function_call_or_method .   (rule 14)

    $default	reduce using rule 14 (function_call)



state 96

    function_call_or_method  ->  function_call_generic .   (rule 15)

    $default	reduce using rule 15 (function_call_or_method)



state 97

    function_call_generic  ->  function_call_header_no_parameters . RIGHT_PAREN   (rule 18)

    RIGHT_PAREN	shift, and go to state 166



state 98

    function_call_generic  ->  function_call_header_with_parameters . RIGHT_PAREN   (rule 17)
    function_call_header_with_parameters  ->  function_call_header_with_parameters . COMMA assignment_expression   (rule 22)

    RIGHT_PAREN	shift, and go to state 167
    COMMA	shift, and go to state 168



state 99

    function_call_header_no_parameters  ->  function_call_header . VOID_TYPE   (rule 19)
    function_call_header_no_parameters  ->  function_call_header .   (rule 20)
    function_call_header_with_parameters  ->  function_call_header . assignment_expression   (rule 21)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 169
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    $default	reduce using rule 20 (function_call_header_no_parameters)

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 170
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 100

    function_call_header  ->  function_identifier . LEFT_PAREN   (rule 23)

    LEFT_PAREN	shift, and go to state 171



state 101

    multiplicative_expression  ->  unary_expression .   (rule 35)

    $default	reduce using rule 35 (multiplicative_expression)



state 102

    unary_expression  ->  unary_operator . unary_expression   (rule 30)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 172
    unary_operator	go to state 102
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 103

    multiplicative_expression  ->  multiplicative_expression . STAR unary_expression   (rule 36)
    multiplicative_expression  ->  multiplicative_expression . SLASH unary_expression   (rule 37)
    multiplicative_expression  ->  multiplicative_expression . PERCENT unary_expression   (rule 38)
    additive_expression  ->  multiplicative_expression .   (rule 39)

    STAR	shift, and go to state 173
    SLASH	shift, and go to state 174
    PERCENT	shift, and go to state 175

    $default	reduce using rule 39 (additive_expression)



state 104

    additive_expression  ->  additive_expression . PLUS multiplicative_expression   (rule 40)
    additive_expression  ->  additive_expression . DASH multiplicative_expression   (rule 41)
    shift_expression  ->  additive_expression .   (rule 42)

    DASH	shift, and go to state 176
    PLUS	shift, and go to state 177

    $default	reduce using rule 42 (shift_expression)



state 105

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 43)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 44)
    relational_expression  ->  shift_expression .   (rule 45)

    LEFT_OP	shift, and go to state 178
    RIGHT_OP	shift, and go to state 179

    $default	reduce using rule 45 (relational_expression)



state 106

    relational_expression  ->  relational_expression . LEFT_ANGLE shift_expression   (rule 46)
    relational_expression  ->  relational_expression . RIGHT_ANGLE shift_expression   (rule 47)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 48)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 49)
    equality_expression  ->  relational_expression .   (rule 50)

    LE_OP	shift, and go to state 180
    GE_OP	shift, and go to state 181
    LEFT_ANGLE	shift, and go to state 182
    RIGHT_ANGLE	shift, and go to state 183

    $default	reduce using rule 50 (equality_expression)



state 107

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 51)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 52)
    and_expression  ->  equality_expression .   (rule 53)

    EQ_OP	shift, and go to state 184
    NE_OP	shift, and go to state 185

    $default	reduce using rule 53 (and_expression)



state 108

    and_expression  ->  and_expression . AMPERSAND equality_expression   (rule 54)
    exclusive_or_expression  ->  and_expression .   (rule 55)

    AMPERSAND	shift, and go to state 186

    $default	reduce using rule 55 (exclusive_or_expression)



state 109

    exclusive_or_expression  ->  exclusive_or_expression . CARET and_expression   (rule 56)
    inclusive_or_expression  ->  exclusive_or_expression .   (rule 57)

    CARET	shift, and go to state 187

    $default	reduce using rule 57 (inclusive_or_expression)



state 110

    inclusive_or_expression  ->  inclusive_or_expression . VERTICAL_BAR exclusive_or_expression   (rule 58)
    logical_and_expression  ->  inclusive_or_expression .   (rule 59)

    VERTICAL_BAR	shift, and go to state 188

    $default	reduce using rule 59 (logical_and_expression)



state 111

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 60)
    logical_xor_expression  ->  logical_and_expression .   (rule 61)

    AND_OP	shift, and go to state 189

    $default	reduce using rule 61 (logical_xor_expression)



state 112

    logical_xor_expression  ->  logical_xor_expression . XOR_OP logical_and_expression   (rule 62)
    logical_or_expression  ->  logical_xor_expression .   (rule 63)

    XOR_OP	shift, and go to state 190

    $default	reduce using rule 63 (logical_or_expression)



state 113

    logical_or_expression  ->  logical_or_expression . OR_OP logical_xor_expression   (rule 64)
    conditional_expression  ->  logical_or_expression .   (rule 65)
    conditional_expression  ->  logical_or_expression . QUESTION expression COLON assignment_expression   (rule 66)

    OR_OP	shift, and go to state 191
    QUESTION	shift, and go to state 192

    $default	reduce using rule 65 (conditional_expression)



state 114

    constant_expression  ->  conditional_expression .   (rule 82)

    $default	reduce using rule 82 (constant_expression)



state 115

    type_specifier  ->  type_specifier_nonarray LEFT_BRACKET constant_expression . RIGHT_BRACKET   (rule 123)

    RIGHT_BRACKET	shift, and go to state 193



state 116

    function_identifier  ->  type_specifier .   (rule 24)

    $default	reduce using rule 24 (function_identifier)



state 117

    struct_specifier  ->  STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list . RIGHT_BRACE   (rule 150)
    struct_declaration_list  ->  struct_declaration_list . struct_declaration   (rule 153)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    TYPE_NAME	shift, and go to state 30
    RIGHT_BRACE	shift, and go to state 194

    type_specifier	go to state 65
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    struct_declaration	go to state 122



state 118

    struct_declarator  ->  IDENTIFIER .   (rule 157)
    struct_declarator  ->  IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 158)

    LEFT_BRACKET	shift, and go to state 195

    $default	reduce using rule 157 (struct_declarator)



state 119

    struct_declaration  ->  type_specifier struct_declarator_list . SEMICOLON   (rule 154)
    struct_declarator_list  ->  struct_declarator_list . COMMA struct_declarator   (rule 156)

    COMMA	shift, and go to state 196
    SEMICOLON	shift, and go to state 197



state 120

    struct_declarator_list  ->  struct_declarator .   (rule 155)

    $default	reduce using rule 155 (struct_declarator_list)



state 121

    struct_specifier  ->  STRUCT LEFT_BRACE struct_declaration_list RIGHT_BRACE .   (rule 151)

    $default	reduce using rule 151 (struct_specifier)



state 122

    struct_declaration_list  ->  struct_declaration_list struct_declaration .   (rule 153)

    $default	reduce using rule 153 (struct_declaration_list)



state 123

    jump_statement  ->  BREAK . SEMICOLON   (rule 198)

    SEMICOLON	shift, and go to state 198



state 124

    jump_statement  ->  CONTINUE . SEMICOLON   (rule 197)

    SEMICOLON	shift, and go to state 199



state 125

    iteration_statement  ->  DO . @4 statement WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON   (rule 188)

    $default	reduce using rule 187 (@4)

    @4  	go to state 200



state 126

    iteration_statement  ->  FOR . LEFT_PAREN @5 for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope   (rule 190)

    LEFT_PAREN	shift, and go to state 201



state 127

    selection_statement  ->  IF . LEFT_PAREN expression RIGHT_PAREN selection_rest_statement   (rule 180)

    LEFT_PAREN	shift, and go to state 202



state 128

    jump_statement  ->  DISCARD . SEMICOLON   (rule 201)

    SEMICOLON	shift, and go to state 203



state 129

    jump_statement  ->  RETURN . SEMICOLON   (rule 199)
    jump_statement  ->  RETURN . expression SEMICOLON   (rule 200)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    SEMICOLON	shift, and go to state 204
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 136
    expression	go to state 205
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 130

    iteration_statement  ->  WHILE . LEFT_PAREN @3 condition RIGHT_PAREN statement_no_new_scope   (rule 186)

    LEFT_PAREN	shift, and go to state 206



state 131

    compound_statement  ->  LEFT_BRACE . RIGHT_BRACE   (rule 168)
    compound_statement  ->  LEFT_BRACE . @1 statement_list @2 RIGHT_BRACE   (rule 171)

    RIGHT_BRACE	shift, and go to state 207

    $default	reduce using rule 169 (@1)

    @1  	go to state 208



state 132

    compound_statement_no_new_scope  ->  LEFT_BRACE RIGHT_BRACE .   (rule 174)

    $default	reduce using rule 174 (compound_statement_no_new_scope)



state 133

    expression_statement  ->  SEMICOLON .   (rule 178)

    $default	reduce using rule 178 (expression_statement)



state 134

    multiplicative_expression  ->  unary_expression .   (rule 35)
    assignment_expression  ->  unary_expression . assignment_operator assignment_expression   (rule 68)

    MUL_ASSIGN	shift, and go to state 209
    DIV_ASSIGN	shift, and go to state 210
    ADD_ASSIGN	shift, and go to state 211
    MOD_ASSIGN	shift, and go to state 212
    LEFT_ASSIGN	shift, and go to state 213
    RIGHT_ASSIGN	shift, and go to state 214
    AND_ASSIGN	shift, and go to state 215
    XOR_ASSIGN	shift, and go to state 216
    OR_ASSIGN	shift, and go to state 217
    SUB_ASSIGN	shift, and go to state 218
    EQUAL	shift, and go to state 219

    $default	reduce using rule 35 (multiplicative_expression)

    assignment_operator	go to state 220



state 135

    assignment_expression  ->  conditional_expression .   (rule 67)

    $default	reduce using rule 67 (assignment_expression)



state 136

    expression  ->  assignment_expression .   (rule 80)

    $default	reduce using rule 80 (expression)



state 137

    expression  ->  expression . COMMA assignment_expression   (rule 81)
    expression_statement  ->  expression . SEMICOLON   (rule 179)

    COMMA	shift, and go to state 221
    SEMICOLON	shift, and go to state 222



state 138

    declaration_statement  ->  declaration .   (rule 160)

    $default	reduce using rule 160 (declaration_statement)



state 139

    declaration  ->  function_prototype . SEMICOLON   (rule 83)

    SEMICOLON	shift, and go to state 48



state 140

    function_identifier  ->  type_specifier .   (rule 24)
    fully_specified_type  ->  type_specifier .   (rule 116)

    LEFT_PAREN	reduce using rule 24 (function_identifier)
    $default	reduce using rule 116 (fully_specified_type)



state 141

    simple_statement  ->  declaration_statement .   (rule 163)

    $default	reduce using rule 163 (simple_statement)



state 142

    statement_list  ->  statement .   (rule 176)

    $default	reduce using rule 176 (statement_list)



state 143

    statement  ->  simple_statement .   (rule 162)

    $default	reduce using rule 162 (statement)



state 144

    statement  ->  compound_statement .   (rule 161)

    $default	reduce using rule 161 (statement)



state 145

    compound_statement_no_new_scope  ->  LEFT_BRACE statement_list . RIGHT_BRACE   (rule 175)
    statement_list  ->  statement_list . statement   (rule 177)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 123
    CONTINUE	shift, and go to state 124
    DO  	shift, and go to state 125
    FOR 	shift, and go to state 126
    IF  	shift, and go to state 127
    DISCARD	shift, and go to state 128
    RETURN	shift, and go to state 129
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 130
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    LEFT_BRACE	shift, and go to state 131
    RIGHT_BRACE	shift, and go to state 223
    SEMICOLON	shift, and go to state 133
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 136
    expression	go to state 137
    declaration	go to state 138
    function_prototype	go to state 139
    function_declarator	go to state 33
    function_header_with_parameters	go to state 34
    function_header	go to state 35
    init_declarator_list	go to state 36
    single_declaration	go to state 37
    fully_specified_type	go to state 38
    type_qualifier	go to state 39
    type_specifier	go to state 140
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    declaration_statement	go to state 141
    statement	go to state 224
    simple_statement	go to state 143
    compound_statement	go to state 144
    expression_statement	go to state 146
    selection_statement	go to state 147
    iteration_statement	go to state 148
    jump_statement	go to state 149



state 146

    simple_statement  ->  expression_statement .   (rule 164)

    $default	reduce using rule 164 (simple_statement)



state 147

    simple_statement  ->  selection_statement .   (rule 165)

    $default	reduce using rule 165 (simple_statement)



state 148

    simple_statement  ->  iteration_statement .   (rule 166)

    $default	reduce using rule 166 (simple_statement)



state 149

    simple_statement  ->  jump_statement .   (rule 167)

    $default	reduce using rule 167 (simple_statement)



state 150

    parameter_declarator  ->  type_specifier IDENTIFIER .   (rule 91)
    parameter_declarator  ->  type_specifier IDENTIFIER . LEFT_BRACKET constant_expression RIGHT_BRACKET   (rule 92)

    LEFT_BRACKET	shift, and go to state 225

    $default	reduce using rule 91 (parameter_declarator)



state 151

    parameter_declaration  ->  type_qualifier parameter_qualifier parameter_declarator .   (rule 93)

    $default	reduce using rule 93 (parameter_declaration)



state 152

    parameter_declaration  ->  type_qualifier parameter_qualifier parameter_type_specifier .   (rule 95)

    $default	reduce using rule 95 (parameter_declaration)



state 153

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET . RIGHT_BRACKET   (rule 104)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET   (rule 105)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET . RIGHT_BRACKET EQUAL initializer   (rule 106)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET EQUAL initializer   (rule 107)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    RIGHT_BRACKET	shift, and go to state 226
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 101
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 114
    constant_expression	go to state 227
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 154

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER EQUAL . initializer   (rule 108)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 157
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    initializer	go to state 228



state 155

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET .   (rule 111)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET . EQUAL initializer   (rule 113)

    EQUAL	shift, and go to state 229

    $default	reduce using rule 111 (single_declaration)



state 156

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET   (rule 112)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET EQUAL initializer   (rule 114)

    RIGHT_BRACKET	shift, and go to state 230



state 157

    initializer  ->  assignment_expression .   (rule 159)

    $default	reduce using rule 159 (initializer)



state 158

    single_declaration  ->  fully_specified_type IDENTIFIER EQUAL initializer .   (rule 115)

    $default	reduce using rule 115 (single_declaration)



state 159

    unary_expression  ->  INC_OP unary_expression .   (rule 28)

    $default	reduce using rule 28 (unary_expression)



state 160

    unary_expression  ->  DEC_OP unary_expression .   (rule 29)

    $default	reduce using rule 29 (unary_expression)



state 161

    primary_expression  ->  LEFT_PAREN expression . RIGHT_PAREN   (rule 6)
    expression  ->  expression . COMMA assignment_expression   (rule 81)

    RIGHT_PAREN	shift, and go to state 231
    COMMA	shift, and go to state 221



state 162

    postfix_expression  ->  postfix_expression INC_OP .   (rule 11)

    $default	reduce using rule 11 (postfix_expression)



state 163

    postfix_expression  ->  postfix_expression DEC_OP .   (rule 12)

    $default	reduce using rule 12 (postfix_expression)



state 164

    postfix_expression  ->  postfix_expression LEFT_BRACKET . integer_expression RIGHT_BRACKET   (rule 8)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    integer_expression	go to state 232
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 136
    expression	go to state 233
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 165

    postfix_expression  ->  postfix_expression DOT . FIELD_SELECTION   (rule 10)
    function_call_or_method  ->  postfix_expression DOT . function_call_generic   (rule 16)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 234
    TYPE_NAME	shift, and go to state 30
    FIELD_SELECTION	shift, and go to state 235

    function_call_generic	go to state 236
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 166

    function_call_generic  ->  function_call_header_no_parameters RIGHT_PAREN .   (rule 18)

    $default	reduce using rule 18 (function_call_generic)



state 167

    function_call_generic  ->  function_call_header_with_parameters RIGHT_PAREN .   (rule 17)

    $default	reduce using rule 17 (function_call_generic)



state 168

    function_call_header_with_parameters  ->  function_call_header_with_parameters COMMA . assignment_expression   (rule 22)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 237
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 169

    function_call_header_no_parameters  ->  function_call_header VOID_TYPE .   (rule 19)
    type_specifier_nonarray  ->  VOID_TYPE .   (rule 124)

    RIGHT_PAREN	reduce using rule 19 (function_call_header_no_parameters)
    $default	reduce using rule 124 (type_specifier_nonarray)



state 170

    function_call_header_with_parameters  ->  function_call_header assignment_expression .   (rule 21)

    $default	reduce using rule 21 (function_call_header_with_parameters)



state 171

    function_call_header  ->  function_identifier LEFT_PAREN .   (rule 23)

    $default	reduce using rule 23 (function_call_header)



state 172

    unary_expression  ->  unary_operator unary_expression .   (rule 30)

    $default	reduce using rule 30 (unary_expression)



state 173

    multiplicative_expression  ->  multiplicative_expression STAR . unary_expression   (rule 36)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 238
    unary_operator	go to state 102
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 174

    multiplicative_expression  ->  multiplicative_expression SLASH . unary_expression   (rule 37)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 239
    unary_operator	go to state 102
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 175

    multiplicative_expression  ->  multiplicative_expression PERCENT . unary_expression   (rule 38)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 240
    unary_operator	go to state 102
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 176

    additive_expression  ->  additive_expression DASH . multiplicative_expression   (rule 41)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 101
    unary_operator	go to state 102
    multiplicative_expression	go to state 241
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 177

    additive_expression  ->  additive_expression PLUS . multiplicative_expression   (rule 40)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 101
    unary_operator	go to state 102
    multiplicative_expression	go to state 242
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 178

    shift_expression  ->  shift_expression LEFT_OP . additive_expression   (rule 43)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 101
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 243
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 179

    shift_expression  ->  shift_expression RIGHT_OP . additive_expression   (rule 44)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 101
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 244
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 180

    relational_expression  ->  relational_expression LE_OP . shift_expression   (rule 48)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 101
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 245
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 181

    relational_expression  ->  relational_expression GE_OP . shift_expression   (rule 49)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 101
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 246
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 182

    relational_expression  ->  relational_expression LEFT_ANGLE . shift_expression   (rule 46)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 101
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 247
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 183

    relational_expression  ->  relational_expression RIGHT_ANGLE . shift_expression   (rule 47)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 101
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 248
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 184

    equality_expression  ->  equality_expression EQ_OP . relational_expression   (rule 51)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 101
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 249
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 185

    equality_expression  ->  equality_expression NE_OP . relational_expression   (rule 52)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 101
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 250
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 186

    and_expression  ->  and_expression AMPERSAND . equality_expression   (rule 54)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 101
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 251
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 187

    exclusive_or_expression  ->  exclusive_or_expression CARET . and_expression   (rule 56)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 101
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 252
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 188

    inclusive_or_expression  ->  inclusive_or_expression VERTICAL_BAR . exclusive_or_expression   (rule 58)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 101
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 253
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 189

    logical_and_expression  ->  logical_and_expression AND_OP . inclusive_or_expression   (rule 60)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 101
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 254
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 190

    logical_xor_expression  ->  logical_xor_expression XOR_OP . logical_and_expression   (rule 62)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 101
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 255
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 191

    logical_or_expression  ->  logical_or_expression OR_OP . logical_xor_expression   (rule 64)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 101
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 256
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 192

    conditional_expression  ->  logical_or_expression QUESTION . expression COLON assignment_expression   (rule 66)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 136
    expression	go to state 257
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 193

    type_specifier  ->  type_specifier_nonarray LEFT_BRACKET constant_expression RIGHT_BRACKET .   (rule 123)

    $default	reduce using rule 123 (type_specifier)



state 194

    struct_specifier  ->  STRUCT IDENTIFIER LEFT_BRACE struct_declaration_list RIGHT_BRACE .   (rule 150)

    $default	reduce using rule 150 (struct_specifier)



state 195

    struct_declarator  ->  IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET   (rule 158)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 101
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 114
    constant_expression	go to state 258
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 196

    struct_declarator_list  ->  struct_declarator_list COMMA . struct_declarator   (rule 156)

    IDENTIFIER	shift, and go to state 118

    struct_declarator	go to state 259



state 197

    struct_declaration  ->  type_specifier struct_declarator_list SEMICOLON .   (rule 154)

    $default	reduce using rule 154 (struct_declaration)



state 198

    jump_statement  ->  BREAK SEMICOLON .   (rule 198)

    $default	reduce using rule 198 (jump_statement)



state 199

    jump_statement  ->  CONTINUE SEMICOLON .   (rule 197)

    $default	reduce using rule 197 (jump_statement)



state 200

    iteration_statement  ->  DO @4 . statement WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON   (rule 188)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 123
    CONTINUE	shift, and go to state 124
    DO  	shift, and go to state 125
    FOR 	shift, and go to state 126
    IF  	shift, and go to state 127
    DISCARD	shift, and go to state 128
    RETURN	shift, and go to state 129
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 130
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    LEFT_BRACE	shift, and go to state 131
    SEMICOLON	shift, and go to state 133
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 136
    expression	go to state 137
    declaration	go to state 138
    function_prototype	go to state 139
    function_declarator	go to state 33
    function_header_with_parameters	go to state 34
    function_header	go to state 35
    init_declarator_list	go to state 36
    single_declaration	go to state 37
    fully_specified_type	go to state 38
    type_qualifier	go to state 39
    type_specifier	go to state 140
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    declaration_statement	go to state 141
    statement	go to state 260
    simple_statement	go to state 143
    compound_statement	go to state 144
    expression_statement	go to state 146
    selection_statement	go to state 147
    iteration_statement	go to state 148
    jump_statement	go to state 149



state 201

    iteration_statement  ->  FOR LEFT_PAREN . @5 for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope   (rule 190)

    $default	reduce using rule 189 (@5)

    @5  	go to state 261



state 202

    selection_statement  ->  IF LEFT_PAREN . expression RIGHT_PAREN selection_rest_statement   (rule 180)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 136
    expression	go to state 262
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 203

    jump_statement  ->  DISCARD SEMICOLON .   (rule 201)

    $default	reduce using rule 201 (jump_statement)



state 204

    jump_statement  ->  RETURN SEMICOLON .   (rule 199)

    $default	reduce using rule 199 (jump_statement)



state 205

    expression  ->  expression . COMMA assignment_expression   (rule 81)
    jump_statement  ->  RETURN expression . SEMICOLON   (rule 200)

    COMMA	shift, and go to state 221
    SEMICOLON	shift, and go to state 263



state 206

    iteration_statement  ->  WHILE LEFT_PAREN . @3 condition RIGHT_PAREN statement_no_new_scope   (rule 186)

    $default	reduce using rule 185 (@3)

    @3  	go to state 264



state 207

    compound_statement  ->  LEFT_BRACE RIGHT_BRACE .   (rule 168)

    $default	reduce using rule 168 (compound_statement)



state 208

    compound_statement  ->  LEFT_BRACE @1 . statement_list @2 RIGHT_BRACE   (rule 171)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 123
    CONTINUE	shift, and go to state 124
    DO  	shift, and go to state 125
    FOR 	shift, and go to state 126
    IF  	shift, and go to state 127
    DISCARD	shift, and go to state 128
    RETURN	shift, and go to state 129
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 130
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    LEFT_BRACE	shift, and go to state 131
    SEMICOLON	shift, and go to state 133
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 136
    expression	go to state 137
    declaration	go to state 138
    function_prototype	go to state 139
    function_declarator	go to state 33
    function_header_with_parameters	go to state 34
    function_header	go to state 35
    init_declarator_list	go to state 36
    single_declaration	go to state 37
    fully_specified_type	go to state 38
    type_qualifier	go to state 39
    type_specifier	go to state 140
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    declaration_statement	go to state 141
    statement	go to state 142
    simple_statement	go to state 143
    compound_statement	go to state 144
    statement_list	go to state 265
    expression_statement	go to state 146
    selection_statement	go to state 147
    iteration_statement	go to state 148
    jump_statement	go to state 149



state 209

    assignment_operator  ->  MUL_ASSIGN .   (rule 70)

    $default	reduce using rule 70 (assignment_operator)



state 210

    assignment_operator  ->  DIV_ASSIGN .   (rule 71)

    $default	reduce using rule 71 (assignment_operator)



state 211

    assignment_operator  ->  ADD_ASSIGN .   (rule 73)

    $default	reduce using rule 73 (assignment_operator)



state 212

    assignment_operator  ->  MOD_ASSIGN .   (rule 72)

    $default	reduce using rule 72 (assignment_operator)



state 213

    assignment_operator  ->  LEFT_ASSIGN .   (rule 75)

    $default	reduce using rule 75 (assignment_operator)



state 214

    assignment_operator  ->  RIGHT_ASSIGN .   (rule 76)

    $default	reduce using rule 76 (assignment_operator)



state 215

    assignment_operator  ->  AND_ASSIGN .   (rule 77)

    $default	reduce using rule 77 (assignment_operator)



state 216

    assignment_operator  ->  XOR_ASSIGN .   (rule 78)

    $default	reduce using rule 78 (assignment_operator)



state 217

    assignment_operator  ->  OR_ASSIGN .   (rule 79)

    $default	reduce using rule 79 (assignment_operator)



state 218

    assignment_operator  ->  SUB_ASSIGN .   (rule 74)

    $default	reduce using rule 74 (assignment_operator)



state 219

    assignment_operator  ->  EQUAL .   (rule 69)

    $default	reduce using rule 69 (assignment_operator)



state 220

    assignment_expression  ->  unary_expression assignment_operator . assignment_expression   (rule 68)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 266
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 221

    expression  ->  expression COMMA . assignment_expression   (rule 81)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 267
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 222

    expression_statement  ->  expression SEMICOLON .   (rule 179)

    $default	reduce using rule 179 (expression_statement)



state 223

    compound_statement_no_new_scope  ->  LEFT_BRACE statement_list RIGHT_BRACE .   (rule 175)

    $default	reduce using rule 175 (compound_statement_no_new_scope)



state 224

    statement_list  ->  statement_list statement .   (rule 177)

    $default	reduce using rule 177 (statement_list)



state 225

    parameter_declarator  ->  type_specifier IDENTIFIER LEFT_BRACKET . constant_expression RIGHT_BRACKET   (rule 92)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 101
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 114
    constant_expression	go to state 268
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 226

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET .   (rule 104)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET . EQUAL initializer   (rule 106)

    EQUAL	shift, and go to state 269

    $default	reduce using rule 104 (init_declarator_list)



state 227

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET   (rule 105)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET EQUAL initializer   (rule 107)

    RIGHT_BRACKET	shift, and go to state 270



state 228

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER EQUAL initializer .   (rule 108)

    $default	reduce using rule 108 (init_declarator_list)



state 229

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET EQUAL . initializer   (rule 113)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 157
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    initializer	go to state 271



state 230

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET .   (rule 112)
    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET . EQUAL initializer   (rule 114)

    EQUAL	shift, and go to state 272

    $default	reduce using rule 112 (single_declaration)



state 231

    primary_expression  ->  LEFT_PAREN expression RIGHT_PAREN .   (rule 6)

    $default	reduce using rule 6 (primary_expression)



state 232

    postfix_expression  ->  postfix_expression LEFT_BRACKET integer_expression . RIGHT_BRACKET   (rule 8)

    RIGHT_BRACKET	shift, and go to state 273



state 233

    integer_expression  ->  expression .   (rule 13)
    expression  ->  expression . COMMA assignment_expression   (rule 81)

    COMMA	shift, and go to state 221

    $default	reduce using rule 13 (integer_expression)



state 234

    function_identifier  ->  IDENTIFIER .   (rule 25)

    $default	reduce using rule 25 (function_identifier)



state 235

    postfix_expression  ->  postfix_expression DOT FIELD_SELECTION .   (rule 10)
    function_identifier  ->  FIELD_SELECTION .   (rule 26)

    LEFT_PAREN	reduce using rule 26 (function_identifier)
    $default	reduce using rule 10 (postfix_expression)



state 236

    function_call_or_method  ->  postfix_expression DOT function_call_generic .   (rule 16)

    $default	reduce using rule 16 (function_call_or_method)



state 237

    function_call_header_with_parameters  ->  function_call_header_with_parameters COMMA assignment_expression .   (rule 22)

    $default	reduce using rule 22 (function_call_header_with_parameters)



state 238

    multiplicative_expression  ->  multiplicative_expression STAR unary_expression .   (rule 36)

    $default	reduce using rule 36 (multiplicative_expression)



state 239

    multiplicative_expression  ->  multiplicative_expression SLASH unary_expression .   (rule 37)

    $default	reduce using rule 37 (multiplicative_expression)



state 240

    multiplicative_expression  ->  multiplicative_expression PERCENT unary_expression .   (rule 38)

    $default	reduce using rule 38 (multiplicative_expression)



state 241

    multiplicative_expression  ->  multiplicative_expression . STAR unary_expression   (rule 36)
    multiplicative_expression  ->  multiplicative_expression . SLASH unary_expression   (rule 37)
    multiplicative_expression  ->  multiplicative_expression . PERCENT unary_expression   (rule 38)
    additive_expression  ->  additive_expression DASH multiplicative_expression .   (rule 41)

    STAR	shift, and go to state 173
    SLASH	shift, and go to state 174
    PERCENT	shift, and go to state 175

    $default	reduce using rule 41 (additive_expression)



state 242

    multiplicative_expression  ->  multiplicative_expression . STAR unary_expression   (rule 36)
    multiplicative_expression  ->  multiplicative_expression . SLASH unary_expression   (rule 37)
    multiplicative_expression  ->  multiplicative_expression . PERCENT unary_expression   (rule 38)
    additive_expression  ->  additive_expression PLUS multiplicative_expression .   (rule 40)

    STAR	shift, and go to state 173
    SLASH	shift, and go to state 174
    PERCENT	shift, and go to state 175

    $default	reduce using rule 40 (additive_expression)



state 243

    additive_expression  ->  additive_expression . PLUS multiplicative_expression   (rule 40)
    additive_expression  ->  additive_expression . DASH multiplicative_expression   (rule 41)
    shift_expression  ->  shift_expression LEFT_OP additive_expression .   (rule 43)

    DASH	shift, and go to state 176
    PLUS	shift, and go to state 177

    $default	reduce using rule 43 (shift_expression)



state 244

    additive_expression  ->  additive_expression . PLUS multiplicative_expression   (rule 40)
    additive_expression  ->  additive_expression . DASH multiplicative_expression   (rule 41)
    shift_expression  ->  shift_expression RIGHT_OP additive_expression .   (rule 44)

    DASH	shift, and go to state 176
    PLUS	shift, and go to state 177

    $default	reduce using rule 44 (shift_expression)



state 245

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 43)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 44)
    relational_expression  ->  relational_expression LE_OP shift_expression .   (rule 48)

    LEFT_OP	shift, and go to state 178
    RIGHT_OP	shift, and go to state 179

    $default	reduce using rule 48 (relational_expression)



state 246

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 43)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 44)
    relational_expression  ->  relational_expression GE_OP shift_expression .   (rule 49)

    LEFT_OP	shift, and go to state 178
    RIGHT_OP	shift, and go to state 179

    $default	reduce using rule 49 (relational_expression)



state 247

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 43)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 44)
    relational_expression  ->  relational_expression LEFT_ANGLE shift_expression .   (rule 46)

    LEFT_OP	shift, and go to state 178
    RIGHT_OP	shift, and go to state 179

    $default	reduce using rule 46 (relational_expression)



state 248

    shift_expression  ->  shift_expression . LEFT_OP additive_expression   (rule 43)
    shift_expression  ->  shift_expression . RIGHT_OP additive_expression   (rule 44)
    relational_expression  ->  relational_expression RIGHT_ANGLE shift_expression .   (rule 47)

    LEFT_OP	shift, and go to state 178
    RIGHT_OP	shift, and go to state 179

    $default	reduce using rule 47 (relational_expression)



state 249

    relational_expression  ->  relational_expression . LEFT_ANGLE shift_expression   (rule 46)
    relational_expression  ->  relational_expression . RIGHT_ANGLE shift_expression   (rule 47)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 48)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 49)
    equality_expression  ->  equality_expression EQ_OP relational_expression .   (rule 51)

    LE_OP	shift, and go to state 180
    GE_OP	shift, and go to state 181
    LEFT_ANGLE	shift, and go to state 182
    RIGHT_ANGLE	shift, and go to state 183

    $default	reduce using rule 51 (equality_expression)



state 250

    relational_expression  ->  relational_expression . LEFT_ANGLE shift_expression   (rule 46)
    relational_expression  ->  relational_expression . RIGHT_ANGLE shift_expression   (rule 47)
    relational_expression  ->  relational_expression . LE_OP shift_expression   (rule 48)
    relational_expression  ->  relational_expression . GE_OP shift_expression   (rule 49)
    equality_expression  ->  equality_expression NE_OP relational_expression .   (rule 52)

    LE_OP	shift, and go to state 180
    GE_OP	shift, and go to state 181
    LEFT_ANGLE	shift, and go to state 182
    RIGHT_ANGLE	shift, and go to state 183

    $default	reduce using rule 52 (equality_expression)



state 251

    equality_expression  ->  equality_expression . EQ_OP relational_expression   (rule 51)
    equality_expression  ->  equality_expression . NE_OP relational_expression   (rule 52)
    and_expression  ->  and_expression AMPERSAND equality_expression .   (rule 54)

    EQ_OP	shift, and go to state 184
    NE_OP	shift, and go to state 185

    $default	reduce using rule 54 (and_expression)



state 252

    and_expression  ->  and_expression . AMPERSAND equality_expression   (rule 54)
    exclusive_or_expression  ->  exclusive_or_expression CARET and_expression .   (rule 56)

    AMPERSAND	shift, and go to state 186

    $default	reduce using rule 56 (exclusive_or_expression)



state 253

    exclusive_or_expression  ->  exclusive_or_expression . CARET and_expression   (rule 56)
    inclusive_or_expression  ->  inclusive_or_expression VERTICAL_BAR exclusive_or_expression .   (rule 58)

    CARET	shift, and go to state 187

    $default	reduce using rule 58 (inclusive_or_expression)



state 254

    inclusive_or_expression  ->  inclusive_or_expression . VERTICAL_BAR exclusive_or_expression   (rule 58)
    logical_and_expression  ->  logical_and_expression AND_OP inclusive_or_expression .   (rule 60)

    VERTICAL_BAR	shift, and go to state 188

    $default	reduce using rule 60 (logical_and_expression)



state 255

    logical_and_expression  ->  logical_and_expression . AND_OP inclusive_or_expression   (rule 60)
    logical_xor_expression  ->  logical_xor_expression XOR_OP logical_and_expression .   (rule 62)

    AND_OP	shift, and go to state 189

    $default	reduce using rule 62 (logical_xor_expression)



state 256

    logical_xor_expression  ->  logical_xor_expression . XOR_OP logical_and_expression   (rule 62)
    logical_or_expression  ->  logical_or_expression OR_OP logical_xor_expression .   (rule 64)

    XOR_OP	shift, and go to state 190

    $default	reduce using rule 64 (logical_or_expression)



state 257

    conditional_expression  ->  logical_or_expression QUESTION expression . COLON assignment_expression   (rule 66)
    expression  ->  expression . COMMA assignment_expression   (rule 81)

    COMMA	shift, and go to state 221
    COLON	shift, and go to state 274



state 258

    struct_declarator  ->  IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET   (rule 158)

    RIGHT_BRACKET	shift, and go to state 275



state 259

    struct_declarator_list  ->  struct_declarator_list COMMA struct_declarator .   (rule 156)

    $default	reduce using rule 156 (struct_declarator_list)



state 260

    iteration_statement  ->  DO @4 statement . WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON   (rule 188)

    WHILE	shift, and go to state 276



state 261

    iteration_statement  ->  FOR LEFT_PAREN @5 . for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope   (rule 190)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    SEMICOLON	shift, and go to state 133
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 136
    expression	go to state 137
    declaration	go to state 138
    function_prototype	go to state 139
    function_declarator	go to state 33
    function_header_with_parameters	go to state 34
    function_header	go to state 35
    init_declarator_list	go to state 36
    single_declaration	go to state 37
    fully_specified_type	go to state 38
    type_qualifier	go to state 39
    type_specifier	go to state 140
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    declaration_statement	go to state 277
    expression_statement	go to state 278
    for_init_statement	go to state 279



state 262

    expression  ->  expression . COMMA assignment_expression   (rule 81)
    selection_statement  ->  IF LEFT_PAREN expression . RIGHT_PAREN selection_rest_statement   (rule 180)

    RIGHT_PAREN	shift, and go to state 280
    COMMA	shift, and go to state 221



state 263

    jump_statement  ->  RETURN expression SEMICOLON .   (rule 200)

    $default	reduce using rule 200 (jump_statement)



state 264

    iteration_statement  ->  WHILE LEFT_PAREN @3 . condition RIGHT_PAREN statement_no_new_scope   (rule 186)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 136
    expression	go to state 281
    fully_specified_type	go to state 282
    type_qualifier	go to state 39
    type_specifier	go to state 140
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    condition	go to state 283



state 265

    compound_statement  ->  LEFT_BRACE @1 statement_list . @2 RIGHT_BRACE   (rule 171)
    statement_list  ->  statement_list . statement   (rule 177)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 123
    CONTINUE	shift, and go to state 124
    DO  	shift, and go to state 125
    FOR 	shift, and go to state 126
    IF  	shift, and go to state 127
    DISCARD	shift, and go to state 128
    RETURN	shift, and go to state 129
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 130
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    LEFT_BRACE	shift, and go to state 131
    SEMICOLON	shift, and go to state 133
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    $default	reduce using rule 170 (@2)

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 136
    expression	go to state 137
    declaration	go to state 138
    function_prototype	go to state 139
    function_declarator	go to state 33
    function_header_with_parameters	go to state 34
    function_header	go to state 35
    init_declarator_list	go to state 36
    single_declaration	go to state 37
    fully_specified_type	go to state 38
    type_qualifier	go to state 39
    type_specifier	go to state 140
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    declaration_statement	go to state 141
    statement	go to state 224
    simple_statement	go to state 143
    compound_statement	go to state 144
    @2  	go to state 284
    expression_statement	go to state 146
    selection_statement	go to state 147
    iteration_statement	go to state 148
    jump_statement	go to state 149



state 266

    assignment_expression  ->  unary_expression assignment_operator assignment_expression .   (rule 68)

    $default	reduce using rule 68 (assignment_expression)



state 267

    expression  ->  expression COMMA assignment_expression .   (rule 81)

    $default	reduce using rule 81 (expression)



state 268

    parameter_declarator  ->  type_specifier IDENTIFIER LEFT_BRACKET constant_expression . RIGHT_BRACKET   (rule 92)

    RIGHT_BRACKET	shift, and go to state 285



state 269

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET EQUAL . initializer   (rule 106)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 157
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    initializer	go to state 286



state 270

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET .   (rule 105)
    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET . EQUAL initializer   (rule 107)

    EQUAL	shift, and go to state 287

    $default	reduce using rule 105 (init_declarator_list)



state 271

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET RIGHT_BRACKET EQUAL initializer .   (rule 113)

    $default	reduce using rule 113 (single_declaration)



state 272

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET EQUAL . initializer   (rule 114)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 157
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    initializer	go to state 288



state 273

    postfix_expression  ->  postfix_expression LEFT_BRACKET integer_expression RIGHT_BRACKET .   (rule 8)

    $default	reduce using rule 8 (postfix_expression)



state 274

    conditional_expression  ->  logical_or_expression QUESTION expression COLON . assignment_expression   (rule 66)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 289
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 275

    struct_declarator  ->  IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET .   (rule 158)

    $default	reduce using rule 158 (struct_declarator)



state 276

    iteration_statement  ->  DO @4 statement WHILE . LEFT_PAREN expression RIGHT_PAREN SEMICOLON   (rule 188)

    LEFT_PAREN	shift, and go to state 290



state 277

    for_init_statement  ->  declaration_statement .   (rule 192)

    $default	reduce using rule 192 (for_init_statement)



state 278

    for_init_statement  ->  expression_statement .   (rule 191)

    $default	reduce using rule 191 (for_init_statement)



state 279

    iteration_statement  ->  FOR LEFT_PAREN @5 for_init_statement . for_rest_statement RIGHT_PAREN statement_no_new_scope   (rule 190)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    $default	reduce using rule 194 (conditionopt)

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 136
    expression	go to state 281
    fully_specified_type	go to state 282
    type_qualifier	go to state 39
    type_specifier	go to state 140
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    condition	go to state 291
    conditionopt	go to state 292
    for_rest_statement	go to state 293



state 280

    selection_statement  ->  IF LEFT_PAREN expression RIGHT_PAREN . selection_rest_statement   (rule 180)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 123
    CONTINUE	shift, and go to state 124
    DO  	shift, and go to state 125
    FOR 	shift, and go to state 126
    IF  	shift, and go to state 127
    DISCARD	shift, and go to state 128
    RETURN	shift, and go to state 129
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 130
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    LEFT_BRACE	shift, and go to state 131
    SEMICOLON	shift, and go to state 133
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 136
    expression	go to state 137
    declaration	go to state 138
    function_prototype	go to state 139
    function_declarator	go to state 33
    function_header_with_parameters	go to state 34
    function_header	go to state 35
    init_declarator_list	go to state 36
    single_declaration	go to state 37
    fully_specified_type	go to state 38
    type_qualifier	go to state 39
    type_specifier	go to state 140
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    declaration_statement	go to state 141
    statement	go to state 294
    simple_statement	go to state 143
    compound_statement	go to state 144
    expression_statement	go to state 146
    selection_statement	go to state 147
    selection_rest_statement	go to state 295
    iteration_statement	go to state 148
    jump_statement	go to state 149



state 281

    expression  ->  expression . COMMA assignment_expression   (rule 81)
    condition  ->  expression .   (rule 183)

    COMMA	shift, and go to state 221

    $default	reduce using rule 183 (condition)



state 282

    condition  ->  fully_specified_type . IDENTIFIER EQUAL initializer   (rule 184)

    IDENTIFIER	shift, and go to state 296



state 283

    iteration_statement  ->  WHILE LEFT_PAREN @3 condition . RIGHT_PAREN statement_no_new_scope   (rule 186)

    RIGHT_PAREN	shift, and go to state 297



state 284

    compound_statement  ->  LEFT_BRACE @1 statement_list @2 . RIGHT_BRACE   (rule 171)

    RIGHT_BRACE	shift, and go to state 298



state 285

    parameter_declarator  ->  type_specifier IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET .   (rule 92)

    $default	reduce using rule 92 (parameter_declarator)



state 286

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET RIGHT_BRACKET EQUAL initializer .   (rule 106)

    $default	reduce using rule 106 (init_declarator_list)



state 287

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET EQUAL . initializer   (rule 107)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 157
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    initializer	go to state 299



state 288

    single_declaration  ->  fully_specified_type IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET EQUAL initializer .   (rule 114)

    $default	reduce using rule 114 (single_declaration)



state 289

    conditional_expression  ->  logical_or_expression QUESTION expression COLON assignment_expression .   (rule 66)

    $default	reduce using rule 66 (conditional_expression)



state 290

    iteration_statement  ->  DO @4 statement WHILE LEFT_PAREN . expression RIGHT_PAREN SEMICOLON   (rule 188)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 136
    expression	go to state 300
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 291

    conditionopt  ->  condition .   (rule 193)

    $default	reduce using rule 193 (conditionopt)



state 292

    for_rest_statement  ->  conditionopt . SEMICOLON   (rule 195)
    for_rest_statement  ->  conditionopt . SEMICOLON expression   (rule 196)

    SEMICOLON	shift, and go to state 301



state 293

    iteration_statement  ->  FOR LEFT_PAREN @5 for_init_statement for_rest_statement . RIGHT_PAREN statement_no_new_scope   (rule 190)

    RIGHT_PAREN	shift, and go to state 302



state 294

    selection_rest_statement  ->  statement . ELSE statement   (rule 181)
    selection_rest_statement  ->  statement .   (rule 182)

    ELSE	shift, and go to state 303

    ELSE	[reduce using rule 182 (selection_rest_statement)]
    $default	reduce using rule 182 (selection_rest_statement)



state 295

    selection_statement  ->  IF LEFT_PAREN expression RIGHT_PAREN selection_rest_statement .   (rule 180)

    $default	reduce using rule 180 (selection_statement)



state 296

    condition  ->  fully_specified_type IDENTIFIER . EQUAL initializer   (rule 184)

    EQUAL	shift, and go to state 304



state 297

    iteration_statement  ->  WHILE LEFT_PAREN @3 condition RIGHT_PAREN . statement_no_new_scope   (rule 186)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 123
    CONTINUE	shift, and go to state 124
    DO  	shift, and go to state 125
    FOR 	shift, and go to state 126
    IF  	shift, and go to state 127
    DISCARD	shift, and go to state 128
    RETURN	shift, and go to state 129
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 130
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    LEFT_BRACE	shift, and go to state 68
    SEMICOLON	shift, and go to state 133
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 136
    expression	go to state 137
    declaration	go to state 138
    function_prototype	go to state 139
    function_declarator	go to state 33
    function_header_with_parameters	go to state 34
    function_header	go to state 35
    init_declarator_list	go to state 36
    single_declaration	go to state 37
    fully_specified_type	go to state 38
    type_qualifier	go to state 39
    type_specifier	go to state 140
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    declaration_statement	go to state 141
    simple_statement	go to state 305
    statement_no_new_scope	go to state 306
    compound_statement_no_new_scope	go to state 307
    expression_statement	go to state 146
    selection_statement	go to state 147
    iteration_statement	go to state 148
    jump_statement	go to state 149



state 298

    compound_statement  ->  LEFT_BRACE @1 statement_list @2 RIGHT_BRACE .   (rule 171)

    $default	reduce using rule 171 (compound_statement)



state 299

    init_declarator_list  ->  init_declarator_list COMMA IDENTIFIER LEFT_BRACKET constant_expression RIGHT_BRACKET EQUAL initializer .   (rule 107)

    $default	reduce using rule 107 (init_declarator_list)



state 300

    expression  ->  expression . COMMA assignment_expression   (rule 81)
    iteration_statement  ->  DO @4 statement WHILE LEFT_PAREN expression . RIGHT_PAREN SEMICOLON   (rule 188)

    RIGHT_PAREN	shift, and go to state 308
    COMMA	shift, and go to state 221



state 301

    for_rest_statement  ->  conditionopt SEMICOLON .   (rule 195)
    for_rest_statement  ->  conditionopt SEMICOLON . expression   (rule 196)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    $default	reduce using rule 195 (for_rest_statement)

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 136
    expression	go to state 309
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42



state 302

    iteration_statement  ->  FOR LEFT_PAREN @5 for_init_statement for_rest_statement RIGHT_PAREN . statement_no_new_scope   (rule 190)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 123
    CONTINUE	shift, and go to state 124
    DO  	shift, and go to state 125
    FOR 	shift, and go to state 126
    IF  	shift, and go to state 127
    DISCARD	shift, and go to state 128
    RETURN	shift, and go to state 129
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 130
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    LEFT_BRACE	shift, and go to state 68
    SEMICOLON	shift, and go to state 133
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 136
    expression	go to state 137
    declaration	go to state 138
    function_prototype	go to state 139
    function_declarator	go to state 33
    function_header_with_parameters	go to state 34
    function_header	go to state 35
    init_declarator_list	go to state 36
    single_declaration	go to state 37
    fully_specified_type	go to state 38
    type_qualifier	go to state 39
    type_specifier	go to state 140
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    declaration_statement	go to state 141
    simple_statement	go to state 305
    statement_no_new_scope	go to state 310
    compound_statement_no_new_scope	go to state 307
    expression_statement	go to state 146
    selection_statement	go to state 147
    iteration_statement	go to state 148
    jump_statement	go to state 149



state 303

    selection_rest_statement  ->  statement ELSE . statement   (rule 181)

    ATTRIBUTE	shift, and go to state 1
    CONST_QUAL	shift, and go to state 2
    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BREAK	shift, and go to state 123
    CONTINUE	shift, and go to state 124
    DO  	shift, and go to state 125
    FOR 	shift, and go to state 126
    IF  	shift, and go to state 127
    DISCARD	shift, and go to state 128
    RETURN	shift, and go to state 129
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    UNIFORM	shift, and go to state 18
    VARYING	shift, and go to state 19
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    WHILE	shift, and go to state 130
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    LEFT_BRACE	shift, and go to state 131
    SEMICOLON	shift, and go to state 133
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 136
    expression	go to state 137
    declaration	go to state 138
    function_prototype	go to state 139
    function_declarator	go to state 33
    function_header_with_parameters	go to state 34
    function_header	go to state 35
    init_declarator_list	go to state 36
    single_declaration	go to state 37
    fully_specified_type	go to state 38
    type_qualifier	go to state 39
    type_specifier	go to state 140
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    declaration_statement	go to state 141
    statement	go to state 311
    simple_statement	go to state 143
    compound_statement	go to state 144
    expression_statement	go to state 146
    selection_statement	go to state 147
    iteration_statement	go to state 148
    jump_statement	go to state 149



state 304

    condition  ->  fully_specified_type IDENTIFIER EQUAL . initializer   (rule 184)

    BOOL_TYPE	shift, and go to state 3
    FLOAT_TYPE	shift, and go to state 4
    INT_TYPE	shift, and go to state 5
    BVEC2	shift, and go to state 6
    BVEC3	shift, and go to state 7
    BVEC4	shift, and go to state 8
    IVEC2	shift, and go to state 9
    IVEC3	shift, and go to state 10
    IVEC4	shift, and go to state 11
    VEC2	shift, and go to state 12
    VEC3	shift, and go to state 13
    VEC4	shift, and go to state 14
    MATRIX2	shift, and go to state 15
    MATRIX3	shift, and go to state 16
    MATRIX4	shift, and go to state 17
    STRUCT	shift, and go to state 20
    VOID_TYPE	shift, and go to state 21
    SAMPLER1D	shift, and go to state 22
    SAMPLER2D	shift, and go to state 23
    SAMPLER3D	shift, and go to state 24
    SAMPLERCUBE	shift, and go to state 25
    SAMPLER1DSHADOW	shift, and go to state 26
    SAMPLER2DSHADOW	shift, and go to state 27
    SAMPLERRECTARB	shift, and go to state 28
    SAMPLERRECTSHADOWARB	shift, and go to state 29
    IDENTIFIER	shift, and go to state 79
    TYPE_NAME	shift, and go to state 30
    FLOATCONSTANT	shift, and go to state 80
    INTCONSTANT	shift, and go to state 81
    BOOLCONSTANT	shift, and go to state 82
    FIELD_SELECTION	shift, and go to state 83
    INC_OP	shift, and go to state 84
    DEC_OP	shift, and go to state 85
    LEFT_PAREN	shift, and go to state 86
    BANG	shift, and go to state 87
    DASH	shift, and go to state 88
    TILDE	shift, and go to state 89
    PLUS	shift, and go to state 90

    variable_identifier	go to state 91
    primary_expression	go to state 92
    postfix_expression	go to state 93
    function_call	go to state 94
    function_call_or_method	go to state 95
    function_call_generic	go to state 96
    function_call_header_no_parameters	go to state 97
    function_call_header_with_parameters	go to state 98
    function_call_header	go to state 99
    function_identifier	go to state 100
    unary_expression	go to state 134
    unary_operator	go to state 102
    multiplicative_expression	go to state 103
    additive_expression	go to state 104
    shift_expression	go to state 105
    relational_expression	go to state 106
    equality_expression	go to state 107
    and_expression	go to state 108
    exclusive_or_expression	go to state 109
    inclusive_or_expression	go to state 110
    logical_and_expression	go to state 111
    logical_xor_expression	go to state 112
    logical_or_expression	go to state 113
    conditional_expression	go to state 135
    assignment_expression	go to state 157
    type_specifier	go to state 116
    type_specifier_nonarray	go to state 41
    struct_specifier	go to state 42
    initializer	go to state 312



state 305

    statement_no_new_scope  ->  simple_statement .   (rule 173)

    $default	reduce using rule 173 (statement_no_new_scope)



state 306

    iteration_statement  ->  WHILE LEFT_PAREN @3 condition RIGHT_PAREN statement_no_new_scope .   (rule 186)

    $default	reduce using rule 186 (iteration_statement)



state 307

    statement_no_new_scope  ->  compound_statement_no_new_scope .   (rule 172)

    $default	reduce using rule 172 (statement_no_new_scope)



state 308

    iteration_statement  ->  DO @4 statement WHILE LEFT_PAREN expression RIGHT_PAREN . SEMICOLON   (rule 188)

    SEMICOLON	shift, and go to state 313



state 309

    expression  ->  expression . COMMA assignment_expression   (rule 81)
    for_rest_statement  ->  conditionopt SEMICOLON expression .   (rule 196)

    COMMA	shift, and go to state 221

    $default	reduce using rule 196 (for_rest_statement)



state 310

    iteration_statement  ->  FOR LEFT_PAREN @5 for_init_statement for_rest_statement RIGHT_PAREN statement_no_new_scope .   (rule 190)

    $default	reduce using rule 190 (iteration_statement)



state 311

    selection_rest_statement  ->  statement ELSE statement .   (rule 181)

    $default	reduce using rule 181 (selection_rest_statement)



state 312

    condition  ->  fully_specified_type IDENTIFIER EQUAL initializer .   (rule 184)

    $default	reduce using rule 184 (condition)



state 313

    iteration_statement  ->  DO @4 statement WHILE LEFT_PAREN expression RIGHT_PAREN SEMICOLON .   (rule 188)

    $default	reduce using rule 188 (iteration_statement)



state 314

    $   	go to state 315



state 315

    $default	accept
